#!/bin/bash
# This file is part of the Hollywood Operating System
# (C) 2024 Originull Software
# License: GPL-3.0

set -e

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root."
    exit 1
fi

ENTRY_NAME="Hollywood"
ESP_PATH=$(grep efi /etc/mtab | grep vfat | head -n1 | cut -d' ' -f2)
ESP_DEV=$(grep efi /etc/mtab | grep vfat | head -n1 | cut -d' ' -f1)

DISK="${ESP_DEV%[0-9]*}"
PARTID="${ESP_DEV##*/}"
PARTID="${PARTID//[^0-9]/}"
GPT_GUID=$(sgdisk -i $PARTID "$DISK" | awk -F': ' '/Partition unique GUID:/ {print $2}')
ESP_HW_PATH=EFI/hollywood

case `uname -m` in
    aarch64)
        SUFFIX="aa64"
        ;;
    x86_64)
        SUFFIX="x64"
        ;;
    *)
        SUFFIX="UNKNOWN"
        ;;
esac

# Make our EFI path
mkdir -pv $ESP_PATH/$ESP_HW_PATH/config || true

# Install refind to hollywood ESP path
echo "Installing icons"
cp -r /usr/share/refind/icons $ESP_PATH/$ESP_HW_PATH/icons
echo "Installing refind EFI executable"
cp /usr/share/refind/refind_$SUFFIX.efi $ESP_PATH/$ESP_HW_PATH/boot$SUFFIX.efi
echo "Installing drivers"
cp -r /usr/share/refind/drivers_$SUFFIX $ESP_PATH/$ESP_HW_PATH/drivers

if [ ! -f "$ESP_PATH/$ESP_HW_PATH/config/custom.conf" ]; then
	echo "Installing fresh custom.conf"
	cp /usr/share/refind/config/custom.conf $ESP_PATH/$ESP_HW_PATH/config/custom.conf
fi
if [ ! -f "$ESP_PATH/$ESP_HW_PATH/config/managed.conf" ]; then
        echo "Installing fresh managed.conf"
        cp /usr/share/refind/config/managed.conf $ESP_PATH/$ESP_HW_PATH/config/managed.conf
fi
if [ ! -f "$ESP_PATH/$ESP_HW_PATH/config/hollywood.conf" ]; then
        echo "Installing fresh hollywood.conf"
        cp /usr/share/refind/config/hollywood.conf $ESP_PATH/$ESP_HW_PATH/config/hollywood.conf
fi
if [ ! -f "$ESP_PATH/$ESP_HW_PATH/refind.conf" ]; then
        echo "Installing fresh refind.conf"
        cp /usr/share/refind/config/refind.conf $ESP_PATH/$ESP_HW_PATH/refind.conf
fi

# Make sure our EFI variables are mounted, and read/write
EFI_VARS_MOUNT_POINT="/sys/firmware/efi/efivars"
if [ -d "$EFI_VARS_MOUNT_POINT" ]; then
    if grep -qs "$EFI_VARS_MOUNT_POINT" /proc/mounts; then
	mount -o remount,rw -t efivarfs efivarfs "$EFI_VARS_MOUNT_POINT"
    else
        echo "Mounting EFI Variables"
        mount -o rw -t efivarfs efivarfs "$EFI_VARS_MOUNT_POINT"
    fi
fi

set +e
# Add a hollywood entry to the EFI boot manager
if efibootmgr | grep -q "$ENTRY_NAME"; then
    echo "Removing legacy Hollywood EFI boot variable"
    BOOT_ENTRY=$(efibootmgr | grep "$ENTRY_NAME")
    BOOT_NUMBER=$(echo "$BOOT_ENTRY" | awk '{print $1}' | sed 's/Boot\([0-9]*\).*/\1/')
    efibootmgr -b "$BOOT_NUMBER" -B &>/dev/null
fi

echo "Creating Hollywood EFI boot entry"
efibootmgr -c -d $DISK -p $PARTID -L "$ENTRY_NAME" -l "$ESP_HW_PATH/boot$SUFFIX.efi" -o 0000 

if [ $? -ne 0 ]; then
    echo "Unable to set BootOrder EFI Variable"
    EFICHECK="$ESP_PATH/EFI/BOOT/BOOT${SUFFIX}.EFI"
    echo $EFICHECK
    if [ ! -f "$EFICHECK" ]; then
       echo "/EFI/BOOT on the ESP is unused, loading Hollywood refind there"
       mkdir -p $ESP_PATH/EFI/BOOT || true
       cp /usr/share/refind/config/refind.conf $ESP_PATH/EFI/BOOT/refind.conf
       echo "Installing icons"
       cp -r /usr/share/refind/icons $ESP_PATH/EFI/BOOT/icons
       echo "Installing refind EFI executable"
       cp /usr/share/refind/refind_$SUFFIX.efi $ESP_PATH/EFI/BOOT/boot$SUFFIX.efi
    fi
fi

# Re-mount EFI variables r/o
mount -o remount,ro -t efivarfs efivarfs "$EFI_VARS_MOUNT_POINT"

bootloader-update-kernels
