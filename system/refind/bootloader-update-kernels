#!/bin/bash

# This file is part of the Hollywood Operating System
# (C) 2024 Originull Software
# License: GPL-3.0

set -e

if [ -f /etc/bootloader.conf ]; then
	. /etc/bootloader.conf
fi

BOOT_DIR="/boot"
EFI_DIR="/boot/efi/EFI/hollywood/"

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root."
    exit 1
fi

# find our root file system and UUID
# fallback if not specified in /etc/bootloader.conf
ROOT_FS=$(df / | tail -1 | awk '{print $1}')

if [ -z "${ROOT_FS_BLKID+x}" ] || [ -z "$ROOT_FS_BLKID" ]; then
    _ROOT_FS=$(df / | tail -1 | awk '{print $1}')
    ROOT_FS_BLKID=$(blkid -o value -s UUID "$_ROOT_FS")
fi

BOOT_MOUNT=$(df /boot/ | awk 'NR==2 {print $6}')
BOOT_DEV=$(df /boot/ | awk 'NR==2 {print $1}')

# Find our /boot location GPT GUID if unset in config
if [ -z "$GPT_BOOT_VOL_GUID" ]; then
    BOOT_DEV=$(df /boot/vmlinuz-stable | awk 'NR==2 {print $1}')
    DISK="${BOOT_DEV%[0-9]*}"
    PARTID="${BOOT_DEV##*/}"
    PARTID="${PARTID//[^0-9]/}"
    GPT_BOOT_VOL_GUID=$(sgdisk -i $PARTID "$DISK" | awk -F': ' '/Partition unique GUID:/ {print $2}')
fi

# A default set of boot params
if [ -z "$KERNEL_PARAM" ]; then
   KERNEL_PARAM="ro quiet splash loglevel=1 vt.global_cursor_default=0"
fi


OUTPUT_FILE=$(mktemp /tmp/boot.conf.XXXXXX)
trap 'rm -f "$OUTPUT_FILE"' EXIT

echo "Updating bootloader kernel.conf"

cat <<EOF > "$OUTPUT_FILE"
# Generated by bootloader-update-kernels

# This configuration is automatically managed by
# Hollywood and the apk package manager.
# Manual updates may be lost at any time.
# Standard arguments are defined in /etc/bootloader.conf

# This will be automatically re-generated as new
# kernels are installed/removed from the system.

# You can manually re-generate this through
#   sudo bootloader-update-kernels

EOF

# Search for kernels and loop through a refind stanza
for file in "$BOOT_DIR"/vmlinuz*; do
    if [[ -f "$file" ]]; then
        filename=$(basename "$file")
        if [[ "$filename" =~ vmlinuz-(.*) ]]; then
            KERNEL_VARIANT="${BASH_REMATCH[1]}"
        else
            continue
        fi

	INITRAMFS_FILE="$BOOT_DIR/initramfs-$KERNEL_VARIANT"
        if [[ ! -f "$INITRAMFS_FILE" ]]; then
            continue
        fi
        KERNEL_TMP="$BOOT_DIR/vmlinuz-$KERNEL_VARIANT"

	if [[ "$KERNEL_VARIANT" == "stable" ]]; then
            DISPLAY_NAME="Hollywood"
        else
            DISPLAY_NAME="Hollywood ($KERNEL_VARIANT)"
        fi

        KERNEL_FILE=$(echo "$KERNEL_TMP" | sed "s|^$BOOT_MOUNT||")
        INITRD_FILE=$(echo "$INITRAMFS_FILE" | sed "s|^$BOOT_MOUNT||")
        if [ "$BOOT_MOUNT" == "/" ]; then
           KERNEL_FILE="/$KERNEL_FILE"
           INITRD_FILE="/$INITRD_FILE"
       fi

	echo "Adding entry for $DISPLAY_NAME (vmlinuz-$KERNEL_VARIANT)"
        cat <<EOF >> "$OUTPUT_FILE"
menuentry "$DISPLAY_NAME" {
        icon /EFI/hollywood/icons/os_hollywood.png
	volume $GPT_BOOT_VOL_GUID
        loader $KERNEL_FILE
        initrd $INITRD_FILE
	options "root=UUID=$ROOT_FS_BLKID $KERNEL_PARAM"
}

EOF
    fi
done

mkdir -p $EFI_DIR/config || true
cp $OUTPUT_FILE $EFI_DIR/config/kernel.conf

rm $OUTPUT_FILE
