# Maintainer: Originull Software <packages@originull.org>
# NOTE: If you rebuild this package with a newer version remember to rebuild:
# * broadcom-wl
# DO NOT RUN abuild checksum - IT WILL MESS THINGS UP
# ADD CHECKSUMS MANUALLY!
_flavor=stable
pkgname=linux-${_flavor}
pkgver=6.5.6
case $pkgver in
	*.*.*)	_kernver=${pkgver%.*};;
	*.*) _kernver=$pkgver-rc3;;
esac
pkgrel=1
pkgdesc="Linux stable kernel"
url="https://www.kernel.org"
depends="initramfs-generator"
_depends_dev="perl gmp-dev mpc1-dev mpfr-dev elfutils-dev bash flex bison zstd"
makedepends="$_depends_dev sed installkernel bc linux-headers linux-firmware-any openssl-dev>3 mawk
	lzop diffutils findutils zstd"
options="!strip"
_config=${config:-config-stable.${CARCH}}
install=
source="https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-$pkgver.tar.xz
	stable.aarch64.config
	stable.x86_64.config
	"
if [ $CARCH = "x86_64" ]
then
	source="$source
        1001-Add-apple-bce-driver.patch
        1002-Put-apple-bce-in-drivers-staging.patch
        1003-add-modalias-to-apple-bce.patch
        1005-Documentation-leds-standardise-keyboard-backlight-le.patch
        1006-HID-hid-apple-magic-backlight-Add-driver-for-keyboar.patch
        1007-HID-apple-ibridge-Add-Apple-iBridge-HID-driver-for-T.patch
        1008-HID-apple-touchbar-Add-driver-for-the-Touch-Bar-on-M.patch
        2008-i915-4-lane-quirk-for-mbp15-1.patch
        2009-apple-gmux-allow-switching-to-igpu-at-probe.patch
        2010-efi-libstub-add-support-for-the-apple_set_os-protoco.patch
        3001-applesmc-convert-static-structures-to-drvdata.patch
        3002-applesmc-make-io-port-base-addr-dynamic.patch
        3003-applesmc-switch-to-acpi_device-from-platform.patch
        3004-applesmc-key-interface-wrappers.patch
        3005-applesmc-basic-mmio-interface-implementation.patch
        3006-applesmc-fan-support-on-T2-Macs.patch
        3007-applesmc-Add-iMacPro-to-applesmc_whitelist.patch
        3008-applesmc-make-applesmc_remove-void.patch
        3009-applesmc-battery-charge-limiter.patch
        4001-Input-bcm5974-Add-support-for-the-T2-Macs.patch
        7001-drm-i915-fbdev-Discard-BIOS-framebuffers-exceeding-h.patch
        8004-brcmfmac-cfg80211-Use-WSEC-to-set-SAE-password.patch
"
fi

subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
_flavors=
for _i in $source; do
	case $_i in
	*.$CARCH.config)
		_f=${_i%.$CARCH.config}
		_flavors="$_flavors ${_f}"
		if [ "linux-$_f" != "$pkgname" ]; then
			subpackages="$subpackages linux-${_f}::$CBUILD_ARCH linux-${_f}-dev:_dev:$CBUILD_ARCH"
		fi
		;;
	esac
done

#if [ "${pkgver%.0}" = "$pkgver" ]; then
#	source="$source
#	https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-$pkgver.xz"
#fi
arch="all !armhf !riscv64"
license="GPL-2.0"

# secfixes:
#   5.10.4-r0:
#     - CVE-2020-29568
#     - CVE-2020-29569

prepare() {
	local _patch_failed=
	cd "$srcdir"/linux-$pkgver
	#if [ "$_kernver" != "$pkgver" ]; then
	#	msg "Applying patch-$pkgver.xz"
	#	unxz -c < "$srcdir"/patch-$pkgver.xz | patch -p1 -N
	#fi

	# first apply patches in specified order
	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				echo $i >>failed
				_patch_failed=1
			fi
			;;
		esac
	done

	if ! [ -z "$_patch_failed" ]; then
		error "The following patches failed:"
		cat failed
		return 1
	fi

	# remove localversion from patch if any
	rm -f localversion*
}

_kernelarch() {
	local arch="$1"
	case "$arch" in
		aarch64*) arch="arm64" ;;
		arm*) arch="arm" ;;
		mips*) arch="mips" ;;
		ppc*) arch="powerpc" ;;
		s390*) arch="s390" ;;
	esac
	echo "$arch"
}

_prepareconfig() {
	local _flavor="$1"
	local _arch="$2"
	local _config=$_flavor.$_arch.config
	local _builddir="$srcdir"/build-$_flavor.$_arch
	mkdir -p "$_builddir"
	echo "-$pkgrel-$_flavor" > "$_builddir"/localversion-originull \
		|| return 1

	cp "$srcdir"/$_config "$_builddir"/.config
	msg "Configuring $_flavor kernel ($_arch)"
	make -C "$srcdir"/linux-$pkgver \
		O="$_builddir" \
		ARCH="$(_kernelarch $_arch)" \
		olddefconfig
}

listconfigs() {
	for i in $source; do
		case "$i" in
			*.config) echo $i;;
		esac
	done
}

prepareconfigs() {
	for _config in $(listconfigs); do
		local _flavor=${_config%%.*}
		local _arch=${_config%.config}
		_arch=${_arch#*.}
		local _builddir="$srcdir"/build-$_flavor.$_arch
		_prepareconfig "$_flavor" "$_arch"
	done
}

# this is supposed to be run before version is bumped so we can compare
# what new kernel config knobs are introduced
prepareupdate() {
	clean && fetch && unpack && prepare && deps
	prepareconfigs
	rm -r "$srcdir"/linux-$pkgver
}

updateconfigs() {
	if ! [ -d "$srcdir"/linux-$pkgver ]; then
		deps && fetch && unpack && prepare
	fi
	for _config in $(listconfigs); do
		local _flavor=${_config%%.*}
		local _arch=${_config%.config}
		_arch=${_arch#*.}
		local _builddir="$srcdir"/build-$_flavor.$_arch
		mkdir -p "$_builddir"
		echo "-$pkgrel-$_flavor" > "$_builddir"/localversion-originull
		local actions="listnewconfig oldconfig"
		if ! [ -f "$_builddir"/.config ]; then
			cp "$srcdir"/$_config "$_builddir"/.config
			actions="olddefconfig"
			env | grep ^CONFIG_ >> "$_builddir"/.config || true
		fi
		make -j1 -C "$srcdir"/linux-$pkgver \
			O="$_builddir" \
			ARCH="$(_kernelarch $_arch)" \
			$actions savedefconfig

		cp "$_builddir"/defconfig "$startdir"/$_config
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		_prepareconfig "$i" "$CARCH"
	done
	for i in $_flavors; do
		msg "Building $i kernel"
		cd "$srcdir"/build-$i.$CARCH
		make ARCH="$(_kernelarch $CARCH)" \
			CC="${CC:-gcc}" \
			AWK="${AWK:-mawk}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Originull"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${pkgver}-${pkgrel}-${_buildflavor}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	cd "$srcdir"/build-$_buildflavor.$CARCH
	# modules_install seems to regenerate a defect Modules.symvers on s390x. Work
	# around it by backing it up and restore it after modules_install
	cp Module.symvers Module.symvers.backup

	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	local _install
	case "$CARCH" in
		arm*|aarch64) _install="zinstall dtbs_install";;
		*) _install=install;;
	esac

	make -j1 modules_install $_install \
		ARCH="$(_kernelarch $CARCH)" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	cp Module.symvers.backup Module.symvers

	rm -f "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf "$_outdir"/lib/firmware

	install -D -m644 include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

# main flavor installs in $pkgdir
package() {
	depends="$depends linux-firmware-any"

	_package stable "$pkgdir"
}

# subflavors install in $subpkgdir
virt() {
	_package virt "$subpkgdir"
}

_dev() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${pkgver}-${pkgrel}-$_flavor
	# copy the only the parts that we really need for build 3rd party
	# kernel modules and install those as /usr/src/linux-headers,
	# simlar to what ubuntu does
	#
	# this way you dont need to install the 300-400 kernel sources to
	# build a tiny kernel module
	#
	pkgdesc="Headers and script for third party modules for $_flavor kernel"
	depends="$_depends_dev"
	local dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	# first we import config, run prepare to set up for building
	# external modules, and create the scripts
	mkdir -p "$dir"
	local _builddir="$srcdir"/build-$_flavor.$CARCH
	cp -a "$_builddir"/.config "$_builddir"/localversion-originull \
		"$dir"/

	make -j1 -C "$srcdir"/linux-$pkgver \
		O="$dir" \
		ARCH="$(_kernelarch $CARCH)" \
		prepare modules_prepare scripts

	# remove the stuff that points to real sources. we want 3rd party
	# modules to believe this is the soruces
	rm "$dir"/Makefile "$dir"/source

	# copy the needed stuff from real sources
	#
	# this is taken from ubuntu kernel build script
	# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$pkgver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
		-print | cpio -pdm "$dir"

	cp -a scripts include "$dir"

	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$dir"

	install -Dm644 "$srcdir"/build-$_flavor.$CARCH/Module.symvers \
		"$dir"/Module.symvers

	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}

if [ $CARCH = "x86_64" ]
then
        sha512sums="$sha512sums
be7da02f4f4c3dff56b36c4462d0e9208c826a89717bd71876adaabc911e3fbf6b72592da6775d06c92f7ab832e27d5f82a0f8b69f244a764c72925607ef86c4  linux-6.5.6.tar.xz
c07f1d5aea18822caba653ef91bc2e8927a1bcc185fbae4bfd9d3c240ead35865141bda56311d1a55d288c6f5fa610762fa873e888b8295926156c3b676f8d2d  stable.aarch64.config
86e7ff3caa39ce07cb8aabac3a8f0888a61a481609fd20072214294d59bd79e4d3eeae38cae7a3d076f4611277a1ebd88feb37f7bc960834bc07aeab6483d701  stable.x86_64.config
888f608ead484479d30ff7acb543d1f65c1286b2ddc6ef3ff2e4c601d4619c40f8b57f4f2505322b94792d7b15fda4b33065ae6375df38f3570349077450d0e1  1001-Add-apple-bce-driver.patch
30a2a82c8793c6de03ea1e030f3086cb98ba1e2ebceb1dfe9679e304758ec8fd6adce92815fc09fc9d35722d572b1004c202eba6ac5e7f7b2e8e020fa6fb5c39  1002-Put-apple-bce-in-drivers-staging.patch
15d63ff2510e749302560e4e5482bf3d2a08511db96eeaefa9ee57eb730071c77c5a453536fa0e38f6c7c7611a3c884d7f2c94239ab0c875f10a8a5470406af1  1003-add-modalias-to-apple-bce.patch
a10134559efe4fa1a81de135f333982d81b30672dddcceb7b4633a2a294fa333a35ccddc8029ca2759ad7d4671c57c7caa68921e02d53af376be60c61e905318  1005-Documentation-leds-standardise-keyboard-backlight-le.patch
e7b87b6bb09390f1d20b87845031e03acb21284ec67c27221f2a5cc40d1d61475ca174f83c700998a7dfa630ee4ee3eb7e44f4221dae363777f8ed76540ed44a  1006-HID-hid-apple-magic-backlight-Add-driver-for-keyboar.patch
70c02651eaff8aaaa71b20c0adec44675d853cf649ed1a49a24f7ecfbbfcc9915fa57db7ec9ee56090bd972cae601b1b45c7849143dadab98e2668658c3a68ee  1007-HID-apple-ibridge-Add-Apple-iBridge-HID-driver-for-T.patch
b1be054748eaf7d88eaef4190f77c66fb2a8f1a5d0c75f72080d7e699882945e13176ade79a21b556a9dd0cb7ae6b2dc280d726c4835e02797327b563479bba1  1008-HID-apple-touchbar-Add-driver-for-the-Touch-Bar-on-M.patch
38c2ca2ba721b64139f56b994c1f1b28c59a1575b68dd92e29d455e6c9188b4ed3230ff6aaa9f66c2757f6b6953a8e6586a91090d086d3fc58d2f1071511a0c0  2008-i915-4-lane-quirk-for-mbp15-1.patch
1e5d69e0679dfe9ade72cfed37058091493951380c02c787d20a40690aef8d27d16ad3a8d4d1696091163254e8535b9e4a91be554226849639e1a2c7368d6bcc  2009-apple-gmux-allow-switching-to-igpu-at-probe.patch
9350e4d3657a3f7c72156b1b7f0fd5a8f6ff8233cb56d30065d45e3bd6727ee7d762f58417ad584ae0ec9ce1451cb72e9cc888f1fbbd935ab6d09e025a199d2c  2010-efi-libstub-add-support-for-the-apple_set_os-protoco.patch
8b96f838010fdd4c9f431fef04069dd2f322c1994c1c7413e9d4797187b2131299bf8c41adcb90a0390915f351cf2c9cb16fe4f45e90d0b2e39b8849fd23f275  3001-applesmc-convert-static-structures-to-drvdata.patch
372eefe62bbe89ac7785a6680bc3636bbb055b1421064a6aac8daeee4f0bd4e61c46dfbd02cc2581e20a5e435892057a3025a1bbc504019059eeeaa40d5b01c7  3002-applesmc-make-io-port-base-addr-dynamic.patch
391f6f347af1967b9ddf68dbf626021dfd28bbad16802f41ea0769f2f2bfbf5faa503267852960edd37ea56fd67d1597dd68d94e0c008ee4a3e2e2b9385fa2bd  3003-applesmc-switch-to-acpi_device-from-platform.patch
33ce4eb7b2af665c7adb4a5426f55575bc2c76cdcc760312191d2d7bdc110d629be2ef1d6820b3f3598fce81b3ab649c4c691fa9c9671a316d1094d46c764f55  3004-applesmc-key-interface-wrappers.patch
7c3cb1b7d495c2885e073bd7c76809fc4a58e2e8956c5d7f795c4a2a0f9800ee9e019c0d73f0fb620956caf7761d0a438e2bf0abb5ea21f322555f61f67a4b44  3005-applesmc-basic-mmio-interface-implementation.patch
a66379bc01562df9d8a5dcd606555e3b14bbb60b1b3cf14a6f94de919b9ab77cce78f7cb2965a5d2fa9300fd3ab0afba5fb499582b032d5cac8efd2aeb75db6d  3006-applesmc-fan-support-on-T2-Macs.patch
073fb4e6c049966143a4bff62c0d8579b993242932f984bc04dd20a57595603f0e4d742f439e88ca40af907ec1a9ac8555cffe1ef49b82013678f9fed934a91b  3007-applesmc-Add-iMacPro-to-applesmc_whitelist.patch
b85f76aec085c4b31ce0cbaf37061089cac8176eb7c6d4a099d5043122453b3b17d969cbf32d62478cf6a0a6254f751a2a47e90c1a27c49cba1c27f099444e21  3008-applesmc-make-applesmc_remove-void.patch
46a8f51d6f48ae641b01bd38115357b65da7b1f9a0d8fa2f899e2bbdfda581262abfcf638e0f8c2653b82946a8971801652507fcf8fb9c5e1a6c05f792fcd827  3009-applesmc-battery-charge-limiter.patch
09292dceb1bc8c620b1a4b2f4dd3616e4078db435ff12410b5f66e0501eefd1fb51d34036b0a264bf6a198769045f22dbfe716502ff5e234a8ef2bd9037e291b  4001-Input-bcm5974-Add-support-for-the-T2-Macs.patch
08f6c1d34ddf39c9fba8df7e47f945f7e63f2fc48762920a730dcacd65311c1c22ad9adb33fa7b3de173999b7d147404f1d4b053b3833e6da9e10319ea06af21  7001-drm-i915-fbdev-Discard-BIOS-framebuffers-exceeding-h.patch
88bae6a43d013dd7621b13e5c9d98be8e7bd3e16dcdb42c51859f9934f4307fd3a67116cf228cc2c0f63a77a4b580c0bdebd267b24937fba3788ff66b4855dd6  8004-brcmfmac-cfg80211-Use-WSEC-to-set-SAE-password.patch
"
else
sha512sums="
be7da02f4f4c3dff56b36c4462d0e9208c826a89717bd71876adaabc911e3fbf6b72592da6775d06c92f7ab832e27d5f82a0f8b69f244a764c72925607ef86c4  linux-6.5.6.tar.xz
c07f1d5aea18822caba653ef91bc2e8927a1bcc185fbae4bfd9d3c240ead35865141bda56311d1a55d288c6f5fa610762fa873e888b8295926156c3b676f8d2d  stable.aarch64.config
86e7ff3caa39ce07cb8aabac3a8f0888a61a481609fd20072214294d59bd79e4d3eeae38cae7a3d076f4611277a1ebd88feb37f7bc960834bc07aeab6483d701  stable.x86_64.config
"
fi
