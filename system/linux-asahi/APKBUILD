# Maintainer: Originull Software <packages@originull.org>
_flavor=asahi
pkgname=linux-${_flavor}
pkgver=6.10.5_p1
_rel=${pkgver#*_p}
kver=${pkgver%_p*}
kver=${kver//_/-}
_asahiver=$kver-$_rel
pkgdesc="Apple Silicon Asahi development Linux kernel"
pkgrel=0
url="https://www.kernel.org"
depends="initramfs-generator speakersafetyd"
_depends_dev="perl gmp-dev elfutils-dev flex bison"
makedepends="$_depends_dev sed bc linux-headers installkernel
	linux-firmware-any openssl-dev rust diffutils findutils
        clang-libclang
        rust
        rustfmt
        rust-bindgen
        rust-src
"
options="!strip !check"
_config=${config:-config-asahi.${CARCH}}
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
source="linux-asahi-$_asahiver.tar.gz::https://github.com/AsahiLinux/linux/archive/refs/tags/asahi-$_asahiver.tar.gz
	config-asahi.aarch64
	"

builddir="$srcdir/linux-asahi-$_asahiver"
arch="aarch64"
license="GPL-2.0-only"

unset _flavors
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}"
		if [ "linux-$_f" != "$pkgname" ]; then
			subpackages="$subpackages linux-${_f}::$CBUILD_ARCH linux-${_f}-dev:_dev:$CBUILD_ARCH"
		fi
		;;
	esac
done

_carch=${CARCH}
case "$_carch" in
aarch64*) _carch="arm64" ;;
arm*) _carch="arm" ;;
esac

prepare() {
	default_prepare
	rm "$builddir"/localversion*
	echo "-$_rel-asahi" > "$builddir"/localversion-originull
	oldconfig
}

oldconfig() {
	for i in $_flavors; do
		local _config=config-$i.${CARCH}
		local _builddir="$srcdir"/build-$i
		mkdir -p "$_builddir"

		cp "$srcdir"/$_config "$_builddir"/.config
		make -C $builddir \
			O="$_builddir" \
			ARCH="$_carch" \
			listnewconfig oldconfig
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		local _builddir="$srcdir"/build-$i
		make -C "$srcdir"/build-$i \
			ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Originull"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	cd "$srcdir"/build-$_buildflavor
	local _abi_release="$(make -s kernelrelease)"

	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	make -j1 modules_install zinstall dtbs_install \
		ARCH="$_carch" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_MOD_STRIP=1 \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	rm -f -- "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf -- "$_outdir"/lib/firmware

	install -D -m644 include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

# main flavor installs in $pkgdir
package() {
	depends="$depends linux-firmware-any"

	_package asahi "$pkgdir"
}

_dev() {
        local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
        local _abi_release=${pkgver}-${pkgrel}-$_flavor
        # copy the only the parts that we really need for build 3rd party
        # kernel modules and install those as /usr/src/linux-headers,
        # simlar to what ubuntu does
        #
        # this way you dont need to install the 300-400 kernel sources to
        # build a tiny kernel module
        #
        pkgdesc="Headers and script for third party modules for $_flavor kernel"
        depends="$_depends_dev"
        local dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}
        export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

        # first we import config, run prepare to set up for building
        # external modules, and create the scripts
        mkdir -p "$dir"
        local _builddir="$srcdir"/build-$_flavor
        cp -a "$_builddir"/.config "$_builddir"/localversion-originull \
                "$dir"/

        make -j1 -C "$srcdir"/linux-asahi-$_asahiver \
                O="$dir" \
                ARCH="arm64" \
                LLVM=1 \
                prepare modules_prepare scripts

        # remove the stuff that points to real sources. we want 3rd party
        # modules to believe this is the soruces
        rm "$dir"/Makefile "$dir"/source

        # copy the needed stuff from real sources
        #
        # this is taken from ubuntu kernel build script
        # http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
        cd "$srcdir"/linux-asahi-$_asahiver
        find .  -path './include/*' -prune \
                -o -path './scripts/*' -prune -o -type f \
                \( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
                   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
                -print | cpio -pdm "$dir"

        cp -a scripts include "$dir"

        find $(find arch -name include -type d -print) -type f \
                | cpio -pdm "$dir"

        install -Dm644 "$srcdir"/build-$_flavor/Module.symvers \
                "$dir"/Module.symvers

        mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
        ln -sf /usr/src/linux-headers-${_abi_release} \
                "$subpkgdir"/lib/modules/${_abi_release}/build
}

sha512sums="
d416f1b169fc82c0562b7cdf6f6b7a3db53211a31f2f5f16b77d7e17728ff15ad3e778d5cd06039d9d7d77ab21ae4bc0e2cea07576c37bba0d7ee8ee765af027  linux-asahi-6.10.5-1.tar.gz
f9a145cdc9d196107835c72003f38da174a75b63645b76c4583c83f88b39f35b5b813447914d08185835b3412e2cd7e113a6d0d916e29065d1547e82dd57a022  config-asahi.aarch64
"
